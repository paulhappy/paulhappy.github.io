<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paul</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 13 Feb 2019 17:22:42 +0800</pubDate>
    <lastBuildDate>Wed, 13 Feb 2019 17:22:42 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Mac下使用hexo搭建静态博客</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#准备工作&quot; id=&quot;markdown-toc-准备工作&quot;&gt;准备工作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;准备工作&quot;&gt;准备工作&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    安装node 到&lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js官网&lt;/a&gt;下载相应平台的最新版本，一路安装即可。
  &lt;/li&gt;
  &lt;li&gt;
    在终端控制台输入命令： &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -g hexo&lt;/code&gt;
  &lt;/li&gt;
  &lt;li&gt;
    输入命令&lt;code class=&quot;highlighter-rouge&quot;&gt;hexo -v&lt;/code&gt;显示hexo的版本号即为安装成功
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 13 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/02/13/create-blog-with-hexo/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/13/create-blog-with-hexo/</guid>
        
        <category>github</category>
        
        <category>blog</category>
        
        <category>hexo</category>
        
        <category>Node.js</category>
        
        <category>Mac</category>
        
        
        <category>hexo</category>
        
      </item>
    
      <item>
        <title>Flutter原理简解</title>
        <description>
我们都知道显示器以固定的频率刷新，比如 iPhone的 60Hz、iPad Pro的 120Hz。当一帧图像绘制完毕后准备绘制下一帧时，显示器会发出一个垂直同步信号（VSync），所以 60Hz的屏幕就会一秒内发出 60次这样的信号。 
并且一般地来说，计算机系统中，CPU、GPU和显示器以一种特定的方式协作：CPU将计算好的显示内容提交给 GPU，GPU渲染后放入帧缓冲区，然后视频控制器按照 VSync信号从帧缓冲区取帧数据传递给显示器显示。

</description>
        <pubDate>Wed, 13 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/02/13/FlutterArch/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/13/FlutterArch/</guid>
        
        <category>移动端</category>
        
        <category>iOS</category>
        
        <category>安卓</category>
        
        <category>Flutter</category>
        
        
        <category>框架</category>
        
      </item>
    
      <item>
        <title>Flutter概要</title>
        <description>
Flutter是 Google推出并开源的移动应用开发框架，主打跨平台、高保真、高性能。开发语言为Dart，使用 Native引擎渲染视图。开发者可以为 Flutter添加 native扩展。

苹果的 iOS SDKs 发布于 2008 年，谷歌的 Android 软件开发工具包发布于 2009 年，这两种工具包分别基于Objective-C 和 Java编程语言。

</description>
        <pubDate>Tue, 12 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/02/12/Flutter/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/12/Flutter/</guid>
        
        <category>移动端</category>
        
        <category>iOS</category>
        
        <category>安卓</category>
        
        <category>Flutter</category>
        
        
        <category>框架</category>
        
      </item>
    
      <item>
        <title>Mac下使用Jekyll 搭建静态博客</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#安装-ruby-环境&quot; id=&quot;markdown-toc-安装-ruby-环境&quot;&gt;安装 Ruby 环境&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;安装-ruby-环境&quot;&gt;安装 Ruby 环境&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    先安装好 RVM
  &lt;/li&gt;
  &lt;li&gt;
    在终端控制台输入命令： &lt;code class=&quot;highlighter-rouge&quot;&gt;$ curl -sSL https://get.rvm.io | bash -s stable&lt;/code&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 11 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/02/11/create-blog-with-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/11/create-blog-with-jekyll/</guid>
        
        <category>github</category>
        
        <category>blog</category>
        
        <category>jekyll</category>
        
        <category>Ruby</category>
        
        <category>Mac</category>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
